on: [push, pull_request]

name: CI

jobs:
  # runs typescript build + test
  ts:
    name: TypeScript 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version:
          - 14
          - 15
    steps:
      # get code + setup node toolchain
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get Node toolchain
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node_version }}
      # install, build, test
      - run: npm install --prefix packet_ts
      - run: npm run --prefix packet_ts build
      - run: npm run --prefix packet_ts test
  # runs rust build + test
  rust-check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  rust-test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test

  rust-fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  rust-clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  integration:
    name: Integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Get Node toolchain
        uses: actions/setup-node@v2
        with:
          node-version: 14
      # install typescript+jest
      - run: npm install --prefix integration/ts
      # run compiler on integration/test.pkt
      # output into the corresponding directories
      - run: cargo run --bin packetc rust integration/test.pkt integration/rust/src/generated.rs
      - run: cargo run --bin packetc ts integration/test.pkt integration/ts/src/generated.ts
      # run rust test
      - run: cargo test --manifest-path=integration/rust/Cargo.toml
      # run ts test
      - run: npm test --prefix integration/ts